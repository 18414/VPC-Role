---
    - name: Create VPC
      ec2_vpc_net: 
        name: "{{ vpc_name }}" 
        state: present
        cidr_block: 10.0.0.0/16
        region: "{{ nvg_region }}" 
      register: myvpc

    - debug: msg={{ myvpc }}

    - name: Create subnet and associate 
      ec2_vpc_subnet: 
        state: present
        vpc_id: "{{ myvpc.vpc.id }}"
        cidr: 10.0.1.0/28
        map_public: yes
        resource_tags: 
          Name: "{{ subnet_name }}" 
      register: sub
    
    - debug: msg={{ sub }} 

    - name: create IGW
      ec2_vpc_igw:
        vpc_id: "{{ myvpc.vpc.id }}"
        region: "{{ nvg_region }}"
        state: present
        tags: 
          Name: "{{ my_igw }}" 
      register: igw

    - debug: msg={{ igw }}

    - name: Create Router
      ec2_vpc_route_table:
        vpc_id: "{{ myvpc.vpc.id }}"
        region: "{{ nvg_region }}"
        subnets:
          - "{{ sub.subnet.id }}"
        routes: 
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        tags: 
          Name: "{{ my_router }}" 
      register: rt
        

    - name: Create Security Group
      ec2_group:
        name: "{{ sg_name }}" 
        description: DMZ Security Group
        vpc_id: "{{ myvpc.vpc.id }}"
        region: "{{ nvg_region }}"
        rules:
          - proto: tcp
            ports:
            - 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
      register: security_group

    - name: Create VPC peering
      include_tasks: vpc_peering.yml
     
    
    - name: Launch the new ec2 instance
      ec2: 
        instance_type: t2.micro
#       key_name: aws_final
        key_name: "{{ key_name }}" 
        image: "{{ centos7_img }}" 
        user_data: "{{ lookup('file', '/home/ansible/ansible/playbooks/ans_env.sh')}}"
        region: "{{ nvg_region }}"
        group_id: "{{ security_group.group_id }}"
        vpc_subnet_id: "{{ sub.subnet.id }}"
        #assign_public_ip: yes
        count_tag: 
          application: "{{ s_tag }}" 
        exact_count: 1
      register: ec2

    - name: Print  ec2 instance
      debug: msg={{ ec2 }}


    - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
      local_action: lineinfile
                    dest="/home/ansible/ansible/playbooks/hosts"
                    regexp={{ item.public_ip }}
                    insertafter="[doc]" line={{ item.public_ip }}
      with_items: "{{ ec2.instances }}"


    - name: Wait for SSH to come up
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance(s)
      local_action: ec2_tag resource={{ item.id }} region={{ nvg_region }} state=present
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Name: ElastickSearch-cluster

    - name: make known host entry
      shell: ssh-keyscan {{ item.public_ip }} >> /home/ansible/.ssh/known_hosts
      with_items: "{{ ec2.instances }}"
